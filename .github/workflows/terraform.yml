name: Terraform S3 Backend Initialization

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Choose the Terraform action to perform"
        required: true
        default: "init"
        type: string
        options:
          - init
          - plan
          - apply
          - destroy

jobs:
  create_bucket:
    name: Create S3 Bucket
    runs-on: ubuntu-latest
    outputs:
      bucket_name: ${{ steps.get_bucket_name.outputs.bucket_name }}
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Initialize Terraform (Local State)
      - name: Terraform Init
        working-directory: ./terraform/s3
        run: terraform init

      # Apply Terraform to create the bucket
      - name: Terraform Apply
        working-directory: ./terraform/s3
        run: terraform apply -auto-approve

      # Extract Bucket Name
      - name: Extract Bucket Name
        working-directory: ./terraform/s3
        id: get_bucket_name
        run: |
          bucket_name=$(terraform output -raw bucket_name)
          echo "::set-output name=bucket_name::$bucket_name"

  terraform_operations:
    name: Terraform Operations
    runs-on: ubuntu-latest
    needs: create_bucket
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Initialize Terraform Backend
      - name: Terraform Init with Backend
        working-directory: ./terraform
        run: |
          terraform init -backend-config="bucket=${{ needs.create_bucket.outputs.bucket_name }}" \
                         -backend-config="key=terraform/state/${{ secrets.ENVIRONMENT }}/terraform.tfstate" \
                         -backend-config="region=${{ secrets.AWS_REGION }}"

      # Terraform Plan
      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        working-directory: ./terraform
        run: terraform plan -out=tfplan

      # Terraform Apply
      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan

      # Terraform Destroy
      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: ./terraform
        run: terraform destroy -auto-approve
